name: continous integration/ contonous deployment
on: [push]
jobs:
  ci_cd:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ROLE_ARN: ${{ secrets.ROLE_ARN}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set environment and bring the model
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dvc[s3]
          dvc pull model/model.pkl -r model_tracker
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, push docker image to amazon ECR
        env: 
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: appfastapitest
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Deploy to app runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main # Deploy app runner service
        with:
          service: app-runner-image-deploy-service
          image: ${{ steps.build-image.outputs.image }}
          access-rol-arn: ${{ secrets.ROLE_ARN }}
          runtime: NODEJS_12
          region: ${{ secrets.AWS_REGION}}
          cpu: 1
          memory: 2
          port: 8000
          wait-for-service-stability-seconds: 10
      - name: App Runner Output
        run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}" 



